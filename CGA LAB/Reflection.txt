#include <GL/glut.h>

// Define the square vertices
GLfloat vertices[][3] = {
    {-50.0, -50.0, 0.0},
    {50.0, -50.0, 0.0},
    {50.0, 50.0, 0.0},
    {-50.0, 50.0, 0.0}
};

// Function to perform reflection
void reflectObject() {
    for (int i = 0; i < 4; i++) {
        vertices[i][0] *= -1; // Reflecting about y-axis
    }
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 1.0, 1.0);

    // Draw the original square
    glBegin(GL_POLYGON);
    for (int i = 0; i < 4; i++) {
        glVertex3fv(vertices[i]);
    }
    glEnd();

    // Perform reflection and draw the reflected square
    reflectObject();
    glColor3f(0.0, 1.0, 0.0); // Set color to green for the reflected square

    glBegin(GL_POLYGON);
    for (int i = 0; i < 4; i++) {
        glVertex3fv(vertices[i]);
    }
    glEnd();

    glFlush();
}

void reshape(int w, int h) {
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-300, 300, -300, 300);
    glMatrixMode(GL_MODELVIEW);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 600);
    glutCreateWindow("Reflection of Object using OpenGL");
    glClearColor(0.0, 0.0, 0.0, 1.0);
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutMainLoop();
    
    return 0;
}
